* When modifying explicit def type, it may make it disappear -- and
  then our cursor is invalid... Maybe cursor should include cur-def
  and go to it rather than root if disappears?

* When entering Grid from some direction, only consider the other axis
  for closeness. i.e: If entering grid from left, use center height(y)
  of the src rect.  If entering from top, use center width(x) only.

* Add JumpTo which gives a hole-like search -- that can sit in a "tab" in place of a DefinitionEdit

* LHS needs to be in infix form too

* Whenever prejumps is added/popped, we actually update in-version
  data, so it actually creates a new, undo-able version. Need to have
  the JumpBack stack actually be outside the version and in the DB to
  fix this and to make navigation (potentially) nicer when switching
  branches.

  * Jump back should be outside the source control. For this we need
    transactions inside the source control to be able to result in
    extra data outwards, beside the widget's event result.

* Projected moves:
  * Has old focal rect
  * May have "projected focal rect"
  * Gets a new "focal rect"
  * Can generate a "projected focal rect" at the projected position of the direction of the movement
    * This "projected focal rect" is to be used by same grid or any parent grid in future movements
    * This "projected focal rect" is sort of a global thing all grids write to?
    * Each grid can add a "delete my projected focal rect" thing before any child action

* ParamEdit needs to take the eventmap/actions of ExpressionEdit and
  also add them to the param via the FuncParam actions

-------

* 1-use wheres to Sugar as "Titled Expressions"

* Associated comment for any expression to title it? Otherwise we're
  modifying the model to add a comment

* Dapaot:
  * Add anim-id-remappings to sugar changes
  * Multi-ids

-------

* ScrollBar

* Lambda unwrap invalidates params

* Need replace/del to mark entire expression hierarchy now unreachable
  as invalidated for delete/modify conflicts
