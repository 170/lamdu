* Show func types if they're problematic

* More type rules:
  * If its apply func its type is Pi
    * Any types of arg become types of Pi's paramType
  * Type of param to propagate out from its uses
    * Writer of scope used with the types it was used?

* Something type of its self -- causes loop/hang (Probably in
  Typed.inferExpression. Keep around a Map DefinitionGuid Type?

* Definition Type to propagate inside and to come from inside

* Oops, if type of left-hand-side is hole, then read-only holes at
   right should NOT have their scope based on their location (They are
   copies!)

   * In fact, maybe type annotations in general should not have all
   the surrounding values in scope? Is that too much free dependency?

   * Maybe read-only hole should not show results at all?

* Inferred types

* Widget framework:
  * Move "Cursor->" reader into widget

* Add JumpTo which gives a hole-like search -- that can sit in a "tab" in place of a DefinitionEdit

-------

* 1-use wheres to Sugar as "Titled Expressions"

* Associated comment for any expression to title it? Otherwise we're
  modifying the model to add a comment

* Dapaot:
  * Add anim-id-remappings to sugar changes
  * Multi-ids

-------

* ScrollBar

* Lambda unwrap invalidates params

* Need replace/del to mark entire expression hierarchy now unreachable
  as invalidated for delete/modify conflicts
