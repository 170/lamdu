module Lamdu.Sugar.AddNames.Types
  ( NameSource(..), NameCollision(..), Name(..)
  , ExpressionN, BodyN, DefinitionN
  ) where

import Lamdu.Sugar.Types (Expression, Body, Definition)

data NameSource = NameSourceAutoGenerated | NameSourceStored
  deriving (Show)
data NameCollision = NoCollision | Collision {-Disambiguator:-} Int
  deriving (Show)
data Name = Name
  { nNameSource :: NameSource
  , nNameCollisionSuffix :: NameCollision
  , nName :: String
  } deriving (Show)

type ExpressionN m a = Expression Name m a
type BodyN m a = Body Name m (ExpressionN m a)
type DefinitionN m a = Definition Name m (Expression Name m a)
